{"version":3,"sources":["Voice.js","ClientSettings.js","Recorder.js","Recognition.js","Compose.js","Mail.js","MailPreview.js","Mailbox.js","Settings.js","App.js","index.js"],"names":["SPEAK","JSON","parse","window","localStorage","getItem","cancel","speak","text","Voice","rate","Settings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","storage","setItem","state","tts","recognition","vemail","icon","helpAddress","_this2","classes","react_default","a","createElement","Dialog_default","className","dialog","open","fullScreen","onClose","DialogTitle_default","dialogTitle","Grid_default","container","spacing","grid","item","sm","Typography_default","variant","onClick","Switch_default","checked","onChange","e","setState","Button_default","color","location","reload","btnApply","Check_default","React","Component","withStyles","theme","position","padding","unit","zIndex","fontSize","textAlign","VEMAIL","Recorder","isRecording","result","Promise","resolve","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","audioBlob","Blob","reader","FileReader","readAsDataURL","onloadend","start","console","log","stop","RECOGNITION","Recognition","message","SpeechRecognition","webkitSpeechRecognition","error","alert","callback","continuous","onresult","current","resultIndex","transcript","results","init","m","Compose","content","send","document","getElementById","value","base64Recording","onEntered","setTimeout","IconButton_default","aria-label","func","Close_default","close","TextField_default","autoFocus","fullWidth","rows","placeholder","id","multiline","Send_default","overflow","Mail","ok","concat","from","no","maybe","read","getAllText","RecordVoiceOver_default","record","getElementsByClassName","innerHTML","replace","click","address","substring","length","setAttribute","_this3","gapi","client","gmail","users","getProfile","userId","response","body","emailAddress","emailContent","messages","resource","raw","btoa","_this4","entered","subject","sendHelp","Help_default","mailBody","onMouseUp","getSelectedText","FlashOn_default","flashIcon","ThumbUp_default","replyIcon","ThumbDown_default","SentimentDissatisfied_default","innerText","getSelection","toString","margin","MailPreview","bool","payload","headers","filter","el","name","split","atob","mime","mailData","Card_default","raised","card","htmlDecode","snippet","handleClick","size","OpenInBrowser_default","trash","DeleteForever_default","src_Mail","input","childNodes","nodeValue","parts","mimeType","date","lineHeight","DISCOVERY_DOCS","Mailbox","mail","CircularProgress_default","emailCount","compiled","Refresh_default","style","load","clearTimeout","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","get","getMessages","isLogin","getEmail","onclick","login","logout","list","labelIds","fullMessage","forEach","i","res","sort","b","internalDate","map","key","src_MailPreview","compile","signIn","signOut","Input_default","defaultValue","type","App","auth","compose","settings","clientSettings","toolbar","Divider_default","ListItem_default","button","handleRecognition","ListItemIcon_default","ListItemText_default","bold","arguments","undefined","profile","recipient","recording","gmailSend","toLowerCase","test","CssBaseline_default","AppBar_default","appBar","Toolbar_default","src_Settings","handleSettings","Settings_default","logo","src","alt","Drawer_default","paper","drawerPaper","drawer","List_default","component","handleCompose","AddCircleOutline_default","ClientSettings","Mailbox_Mailbox","status","src_Compose","alignItems","right","height","width","display","fontWeight","flexGrow","overflowY","flexShrink","left","mixins","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.cc4b2fba.chunk.js","sourcesContent":["import Voice from '@cheapundies/responsive-voice';\n\nconst SPEAK = JSON.parse(window.localStorage.getItem('tts'));\nlet cancel = false;\n\nexport function speak(text) {\n  if (SPEAK) {\n    cancel = !cancel;\n    cancel && Voice.cancel();\n    !cancel && Voice.speak(text, 'US English Female', { rate: 0.75 });\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  btnApply: {\n    position: 'fixed'\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  grid: {\n    textAlign: 'center'\n  }\n});\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!!typeof Storage) {\n      this.storage = window.localStorage;\n      if (!this.storage.getItem('tts')) {\n        this.storage.setItem('tts', false);\n      }\n      if (!this.storage.getItem('recognition')) {\n        this.storage.setItem('recognition', false);\n      }\n      if (!this.storage.getItem('vemail')) {\n        this.storage.setItem('vemail', false);\n      }\n      if (!this.storage.getItem('icon')) {\n        this.storage.setItem('icon', false);\n      }\n      if (!this.storage.getItem('helpAddress')) {\n        this.storage.setItem('helpAddress', 'ablemail1540@gmail.com');\n      }\n    } else {\n      alert('Your browser doesn\\'t support local storage.');\n    }\n    this.state = {\n      tts: this.storage.getItem('tts'),\n      recognition: this.storage.getItem('recognition'),\n      vemail: this.storage.getItem('vemail'),\n      icon: this.storage.getItem('icon'),\n      helpAddress: this.storage.getItem('helpAddress')\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() }>\n        <DialogTitle className={ classes.dialogTitle }>Settings</DialogTitle>\n        <div className={ classes.dialog }>\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.tts) ? (\n                  <div>\n                    <Typography variant='h4' onClick={ () => speak('Text to speech') }>Text-to-Speech</Typography>\n                    <Switch checked={ JSON.parse(this.state.tts) } onChange={ (e, checked) => { this.storage.setItem('tts', checked); this.setState({ tts: this.storage.getItem('tts') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.recognition) ? (\n                  <div>\n                    <Typography variant='h4' onClick={ () => speak('Voice recognition') }>Voice Recognition</Typography>\n                    <Switch checked={ JSON.parse(this.state.recognition) } onChange={ (e, checked) => { this.storage.setItem('recognition', checked); this.setState({ recognition: this.storage.getItem('recognition') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.vemail) ? (\n                  <div>\n                    <Typography variant='h4' onClick={ () => speak('Voice emails') }>Voice Emails</Typography>\n                    <Switch checked={ JSON.parse(this.state.vemail) } onChange={ (e, checked) => { this.storage.setItem('vemail', checked); this.setState({ vemail: this.storage.getItem('vemail') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.icon) ? (\n                  <div>\n                    <Typography variant='h4' onClick={ () => speak('Bigger icons') }>Bigger Icons</Typography>\n                    <Switch checked={ JSON.parse(this.state.icon) } onChange={ (e, checked) => { this.storage.setItem('icon', checked); this.setState({ icon: this.storage.getItem('icon') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <Button color='primary' variant='outlined' onClick={ () => window.location.reload() } className={ classes.btnApply }>\n            <CheckIcon />&emsp;Apply\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Settings);","const VEMAIL = JSON.parse(window.localStorage.getItem('vemail'));\n\nexport default class Recorder {\n  constructor() {\n    if (VEMAIL) {\n      this.isRecording = false;\n      this.result = new Promise((resolve) => {\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n          this.mediaRecorder = new MediaRecorder(stream);\n          this.audioChunks = [];\n          this.mediaRecorder.addEventListener('dataavailable', (event) => {\n            this.audioChunks.push(event.data);\n          });\n          this.mediaRecorder.addEventListener('stop', () => {\n            let audioBlob = new Blob(this.audioChunks);\n            let reader = new FileReader();\n            reader.readAsDataURL(audioBlob);\n            reader.onloadend = () => {\n              resolve(reader.result);\n            };\n          });\n        });\n      });\n    }\n  }\n\n  start() {\n    if (VEMAIL && !this.isRecording) {\n      this.mediaRecorder.start();\n      this.isRecording = true;\n      console.log('Starting recording...');\n    }\n  }\n\n  stop() {\n    if (VEMAIL && this.isRecording) {\n      this.mediaRecorder.stop();\n      this.isRecording = false;\n      console.log('Stopping recording...');\n    }\n  }\n\n  get base64Recording() {\n    return this.result;\n  }\n}","const RECOGNITION = JSON.parse(window.localStorage.getItem('recognition'));\n\nexport default class Recognition {\n  constructor() {\n    this.message = '';\n    this.isRecording = false;\n    if (RECOGNITION) {\n      try {\n        this.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        this.recognition = new this.SpeechRecognition();\n      } catch (e) {\n        console.error(e);\n        alert('Your browser does not support voice recognition.');\n      }\n    }\n  }\n\n  init(callback) {\n    if (RECOGNITION) {\n      this.recognition.continuous = true;\n      this.recognition.onresult = (e) => {\n        let current = e.resultIndex;\n        let transcript = e.results[current][0].transcript;\n        this.message += transcript;\n        !!callback && callback();\n      };\n    }\n  }\n\n  start(callback) {\n    if (RECOGNITION && !this.isRecording) {\n      this.init(() => !!callback && callback());\n      this.recognition.start();\n      this.isRecording = true;\n      console.log('Starting voice recognition...');\n    }\n  }\n\n  stop() {\n    if (RECOGNITION && this.isRecording) {\n      this.recognition.stop();\n      this.isRecording = false;\n      console.log('Stopping voice recognition...');\n      return this.message;\n    }\n  }\n\n  get transcript() {\n    return this.message;\n  }\n\n  set transcript(m) {\n    this.message = m;\n  }\n}","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Recorder from './Recorder';\nimport Recognition from './Recognition';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { speak } from './Voice';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  close: {\n    fontSize: JSON.parse(window.localStorage.getItem('icon')) ? '60pt' : '40pt',\n    zIndex: 99999\n  },\n  dialog: {\n    overflow: 'hidden',\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  send: {\n    fontSize: icon ? '60pt' : '40pt'\n  }\n});\n\nclass Compose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n  }\n\n  send() {\n    this.props.send(\n      document.getElementById('recipient').value,\n      document.getElementById('compose-body').value,\n      this.mediaRecorder.base64Recording\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.mediaRecorder = new Recorder();\n    let recognition = new Recognition();\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() } onEntered={ () => setTimeout(() => { this.mediaRecorder.start(); recognition.start(); }, 2000) }>\n        <Grid container spacing={ 8 }>\n          <Grid item sm={ 10 }>\n            <DialogTitle className={ classes.dialogTitle } onClick={ () => speak('Compose Email') }>Compose Email</DialogTitle>\n            <br />\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Close' color='primary' onClick={ () => this.props.func(false) }>\n              <CloseIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <div className={ classes.dialog }>\n          <TextField autoFocus fullWidth variant='outlined' rows='1' placeholder='To:' id='recipient' />\n          <br />\n          <br />\n          <TextField fullWidth multiline variant='outlined' rows='20' id='compose-body' value={ this.state.content } onChange={ () => this.setState({ content: document.getElementById('compose-body').value }) } placeholder='Message' />\n          <br />\n          <br />\n          <Button variant='outlined' color='secondary' id='btn-send' onClick={ () => { this.mediaRecorder.stop(); this.setState({ content: recognition.stop() }); this.send(); } }>\n            <SendIcon className={ classes.send } />&emsp;Send Email\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Compose);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FlashOnIcon from '@material-ui/icons/FlashOn'\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  close: {\n    fontSize: icon ? '40pt' : '60pt',\n    zIndex: 99999\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '30pt'\n  },\n  flashIcon: {\n    fontSize: '36pt'\n  },\n  grid: {\n    margin: 10,\n    textAlign: 'center'\n  },\n  mailBody: {\n    padding: theme.spacing.unit * 5\n  },\n  record: {\n    fontSize: icon ? '40pt' : '60pt',\n    zIndex: 99999\n  },\n  replyIcon: {\n    fontSize: '24pt'\n  }\n});\n\nclass Mail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ok = `Dear ${ this.props.from },\\r\\n\\nSounds great!`;\n    this.no = `Dear ${ this.props.from },\\r\\nNo, sorry. I don't think so.`;\n    this.maybe = `Dear ${ this.props.from },\\r\\nI'm not sure. Can we talk in person?`;\n    this.state = {\n      read: JSON.parse(window.localStorage.getItem('tts')) ? (\n        <Button variant='contained' color='secondary' onClick={ () => Mail.getAllText() }>\n          <RecordVoiceOverIcon className={ this.props.classes.record } />&nbsp;\n          Read Email\n        </Button>\n      ) : null\n    };\n  }\n\n  entered() {\n    document.getElementsByClassName('mail-body')[0].innerHTML = this.props.data.replace(/Â/g, ' ');\n  }\n\n  static getAllText() {\n    speak(document.getElementsByClassName('mail-body')[0].innerText);\n  }\n\n  static getSelectedText() {\n    let text = '';\n    if (window.getSelection) {\n      text = window.getSelection().toString();\n    }\n    speak(text);\n  }\n\n  send(value) {\n    document.getElementById('btn-compose').click();\n    setTimeout(() => {\n      document.getElementById('recipient').value = this.props.address.substring(0, this.props.address.length - 1);\n      document.getElementById('recipient').setAttribute('disabled', 'true');\n      document.getElementById('compose-body').value = value;\n      document.getElementById('compose-body').setAttribute('disabled', 'true');\n      setTimeout(() => {\n        document.getElementById('btn-send').click();\n      }, 2000);\n    }, 1000);\n  }\n\n  sendHelp() {\n    window.gapi.client.gmail.users.getProfile({ userId: 'me' }).then((response) => {\n      this.address = JSON.parse(response.body).emailAddress;\n      this.emailContent = `Content-Type: text/html\\r\\nFrom: ${ this.address }\\r\\nTo: ${ window.localStorage.getItem('helpAddress') }\\r\\nSubject: Help!\\r\\nReply-To: ${ this.address }\\r\\n\\r\\nPlease help:\\n\\n${ this.props.data.replace(/Â/g, ' ') }`;\n      window.gapi.client.gmail.users.messages.send({\n        userId: 'me',\n        resource: {\n          raw: btoa(this.emailContent).replace(/\\+/g, '-').replace(/\\//g, '_')\n        }\n      }).then(() => setTimeout(() => window.location.reload(), 500));\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen={ true } onClose={ () => this.props.onClose() } onEntered={ () => this.entered() }>\n        <Grid container spacing={ 8 }>\n          <Grid item sm={ 5 }>\n            <DialogTitle className={ classes.dialogTitle } onClick={ () => speak(this.props.subject) }>{ this.props.subject }</DialogTitle>\n            <br />\n          </Grid>\n          <Grid item sm={ 3 }>\n            <br />\n            <br />\n            { this.state.read }\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Help' color='secondary' onClick={ () => this.sendHelp() }>\n              <HelpIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Close' color='primary' onClick={ () => this.props.func(false) }>\n              <CloseIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <br />\n        <div className={ `${ classes.mailBody } mail-body` } onClick={ () => Mail.getAllText() } onMouseUp={ () => Mail.getSelectedText() } />\n        <Grid container spacing={ 8 } className={ classes.grid }>\n          <Grid item sm={ 12 }>\n            <Typography variant='h3' onClick={ () => speak('Quick reply') }>\n              <FlashOnIcon className={ classes.flashIcon } />Quick Reply\n            </Typography>\n            <br />\n            <br />\n          </Grid>\n          <Grid item sm={ 4 } />\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Ok' color='primary' onClick={ () => this.send(this.ok) }>\n              <ThumbUpIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='No' color='primary' onClick={ () => this.send(this.no) } >\n              <ThumbDownIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Maybe' color='primary' onClick={ () => this.send(this.maybe) }>\n              <SentimentDissatisfiedIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          {/*<Grid item sm={ 1 }>*/}\n            {/*<IconButton aria-label='Maybe' color='primary' onClick={ () => this.send('test') }>*/}\n              {/*<SentimentDissatisfiedIcon className={ classes.replyIcon } />*/}\n            {/*</IconButton>*/}\n          {/*</Grid>*/}\n        </Grid>\n        <br />\n        <br />\n        <br />\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Mail);","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Mail from './Mail';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport Typography from \"@material-ui/core/Typography\";\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  card: {\n    padding: theme.spacing.unit * 5\n  },\n  date: {\n    lineHeight: 2\n  },\n  open: {\n    fontSize: icon ? '60pt' : '40pt'\n  }\n});\n\nclass MailPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  static htmlDecode(input){\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n\n  static mime(payload) {\n    // Needs to be optimized later\n    return payload.body.data || MailPreview.mime(payload.parts.filter((el) => el.mimeType === 'text/html' || el.mimeType === 'multipart/alternative' || el.mimeType === 'multipart/related')[0]);\n  }\n\n  handleClick(bool) {\n    this.setState({\n      open: bool\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.from = this.props.payload.headers.filter(el => el.name === 'From')[0].value.split('<');\n    this.subject = this.props.payload.headers.filter(el => el.name === 'Subject')[0].value;\n    this.data = atob(MailPreview.mime(this.props.payload).replace(/_/g, '/').replace(/-/g, '+'));\n    this.props.mailData(`From ${ this.from[0] }. ${ this.subject }.`);\n    return (\n      <Card raised className={ classes.card }>\n        <Typography variant='h3' onClick={ () => speak(`From ${ this.from[0] }`) }>From: { this.from[0] }</Typography>\n        <br />\n        <Typography variant='h6' onClick={ () => speak(this.from[1]) }>{ `<${ this.from[1] }` }</Typography>\n        <br />\n        <Typography variant='h2'  onClick={ () => speak(this.subject) }>{ `${ this.subject }` }</Typography>\n        <br />\n        <Typography variant='h5' onClick={ () => speak(MailPreview.htmlDecode(this.props.snippet)) }>{ MailPreview.htmlDecode(this.props.snippet) }...</Typography>\n        <br />\n        <br />\n        <Grid container spacing={ 24 }>\n          <Grid item sm={ 9 }>\n            <Button variant='contained' onClick={ () => { this.handleClick(true); speak('Open email'); } } size='large' color='primary' fullWidth>\n              <OpenInBrowserIcon className={ classes.open } />&emsp;\n              Open Email\n            </Button>\n          </Grid>\n          <Grid item sm={ 3 }>\n            <IconButton aria-label='Delete' color='primary' onClick={ () => this.props.trash() }>\n              <DeleteForeverIcon className={ classes.open } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Mail open={ this.state.open } func={ (bool) => this.handleClick(bool) } onClose={ () => this.handleClick(false) } subject={ this.subject } data={ this.data } from={ this.from[0] } address={ this.from[1] } />\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(style)(MailPreview);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MailPreview from './MailPreview';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\n\nconst CLIENT_ID = '98686281361-8upucg52mkqe70nv3j9evlc9kim8ki56.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyAnDiNaAU8T2W75ynyVt-Dz8ebMxD30s1I';\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest'];\nconst SCOPES = 'https://www.googleapis.com/auth/gmail.modify';\n\nexport default class Mailbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mail: <CircularProgress color='secondary' />\n    };\n    this.emailCount = 0;\n    this.compiled = '';\n    this.reload = setTimeout(() => this.setState({\n      mail: (\n        <div>\n          <CircularProgress color='secondary' />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Button color='secondary' variant='contained' onClick={ () => window.location.reload() }>\n            <RefreshIcon style={ { fontSize: JSON.parse(window.localStorage.getItem('icon')) ? '60pt': '40pt' } } />&emsp;\n            Reload\n          </Button>\n        </div>\n      )\n    }), 5000);\n  }\n  componentDidMount() {\n    try {\n      document.addEventListener('DOMContentLoaded', () => {\n        window.gapi.load('client:auth2', () => {\n          this.init();\n        });\n      }, false);\n    } catch (e) {\n      console.error(e);\n      alert('Something went wrong. Try refreshing the page?');\n      clearTimeout(this.reload);\n      this.setState({ mail: <Typography variant='h2' onClick={ () => speak('Unable to fetch emails') }>Unable to fetch emails.</Typography> });\n    }\n  }\n\n  init() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(() => {\n      if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n        this.getMessages();\n      }\n      this.props.isLogin(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      window.gapi.client.gmail.users.getProfile({ userId: 'me' }).then((response) => {\n        this.props.getEmail(JSON.parse(response.body));\n      });\n      try { document.getElementById('btn-login').onclick = Mailbox.login; } catch (e) {}\n      try { document.getElementById('btn-logout').onclick = Mailbox.logout; } catch (e) {}\n    });\n  }\n\n  static login() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  static logout() {\n    window.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  static trash(id) {\n    window.gapi.client.gmail.users.messages.trash({\n      userId: 'me',\n      id: id\n    }).then(() => window.location.reload());\n  }\n\n  getMessages() {\n    window.gapi.client.gmail.users.messages.list({\n      userId: 'me',\n      labelIds: ['INBOX']\n    }).then((response) => {\n      let { messages } = response.result;\n      let fullMessage = [];\n      clearTimeout(this.reload);\n      messages.forEach((m, i) => {\n        window.gapi.client.gmail.users.messages.get({\n          userId: 'me',\n          id: m.id\n        }).then((res) => {\n          fullMessage.push(res.result);\n          if (i + 1 === messages.length) {\n            if (fullMessage.length !== messages.length) {\n              window.location.reload();\n            }\n            fullMessage.sort((a, b) => b.internalDate - a.internalDate);\n            this.setState({\n              mail: fullMessage.map((el, i) =>\n                <div key={ `preview-${ i }` }>\n                  <MailPreview snippet={ el.snippet } payload={ el.payload } trash={ () => Mailbox.trash(messages[i].id) } mailData={ (data) => this.compile(data) } />\n                  <br />\n                  <br />\n                </div>\n              )\n            });\n          }\n        });\n      });\n    });\n  }\n\n  compile(data) {\n    this.emailCount++;\n    this.compiled += `Email number ${ this.emailCount }: ${ data } `;\n    this.props.mailData(this.compiled);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.mail }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  btnApply: {\n    position: 'fixed'\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  grid: {\n    textAlign: 'center'\n  }\n});\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!!typeof Storage) {\n      this.storage = window.localStorage;\n      if (!this.storage.getItem('tts')) {\n        this.storage.setItem('tts', false);\n      }\n      if (!this.storage.getItem('recognition')) {\n        this.storage.setItem('recognition', false);\n      }\n      if (!this.storage.getItem('vemail')) {\n        this.storage.setItem('vemail', false);\n      }\n      if (!this.storage.getItem('icon')) {\n        this.storage.setItem('icon', false);\n      }\n      if (!this.storage.getItem('helpAddress')) {\n        this.storage.setItem('helpAddress', 'ablemail1540@gmail.com');\n      }\n    } else {\n      alert('Your browser doesn\\'t support local storage.');\n    }\n    this.state = {\n      tts: this.storage.getItem('tts'),\n      recognition: this.storage.getItem('recognition'),\n      vemail: this.storage.getItem('vemail'),\n      icon: this.storage.getItem('icon'),\n      helpAddress: this.storage.getItem('helpAddress')\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() }>\n        <DialogTitle className={ classes.dialogTitle }>Settings</DialogTitle>\n        <div className={ classes.dialog }>\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Text-to-Speech</Typography>\n              <Switch checked={ JSON.parse(this.state.tts) } onChange={ (e, checked) => { this.storage.setItem('tts', checked); this.setState({ tts: this.storage.getItem('tts') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Recognition</Typography>\n              <Switch checked={ JSON.parse(this.state.recognition) } onChange={ (e, checked) => { this.storage.setItem('recognition', checked); this.setState({ recognition: this.storage.getItem('recognition') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Emails</Typography>\n              <Switch checked={ JSON.parse(this.state.vemail) } onChange={ (e, checked) => { this.storage.setItem('vemail', checked); this.setState({ vemail: this.storage.getItem('vemail') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Bigger Icons</Typography>\n              <Switch checked={ JSON.parse(this.state.icon) } onChange={ (e, checked) => { this.storage.setItem('icon', checked); this.setState({ icon: this.storage.getItem('icon') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Emergency Contact Email</Typography>\n              <Input defaultValue={ this.state.helpAddress } id='helpAddress' onChange={ () => this.storage.setItem('helpAddress', document.getElementById('helpAddress').value) } type='email' />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <Button color='primary' variant='outlined' onClick={ () => window.location.reload() } className={ classes.btnApply }>\n            <CheckIcon />&emsp;Apply\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Settings);","import React from 'react';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ClientSettings from './ClientSettings';\nimport Compose from './Compose';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Mailbox from './Mailbox';\nimport Recognition from \"./Recognition\";\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport Settings from './Settings';\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  appBar: {\n    zIndex: 1400,\n    alignItems: 'center'\n  },\n  auth: {\n    position: 'absolute',\n    right: '-40vw'\n  },\n  body: {\n    height: '100vh',\n    margin: 0,\n    overflow: 'hidden',\n    width: '100vw',\n    display: 'flex'\n  },\n  bold: {\n    fontWeight: icon ? '' : 'bold'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 12.5,\n    overflowY: 'scroll'\n  },\n  drawer: {\n    flexShrink: 0,\n    width: 360\n  },\n  drawerPaper: {\n    width: 360\n  },\n  icon: {\n    fontSize: icon ? '60pt' : '40pt'\n  },\n  logo: {\n    height: '5vh'\n  },\n  settings: {\n    position: 'absolute',\n    left: '-40vw'\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recognition = new Recognition();\n    this.isRecording = false;\n    this.emailCount = 0;\n    this.state = {\n      auth: null,\n      compose: false,\n      settings: false,\n      clientSettings: false,\n      recognition: JSON.parse(window.localStorage.getItem('recognition')) ? (\n        <div>\n          <div className={ this.props.classes.toolbar } />\n          <Divider />\n          <ListItem button={ true } onClick={ () => { speak('Voice Command'); this.handleRecognition(); } }>\n            <ListItemIcon>\n              <RecordVoiceOverIcon className={ this.props.classes.icon } />\n            </ListItemIcon>\n            <ListItemText>\n              <br />\n              <Typography variant='h3' color='inherit' className={ this.props.classes.bold }>Voice Command</Typography>\n              <br />\n            </ListItemText>\n          </ListItem>\n          <Divider />\n        </div>\n      ) : null\n    }\n  }\n\n  login(status = false) {\n    if (status) {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-logout' className={ this.props.classes.auth } onClick={ () => { speak('Sign out'); setTimeout(() => window.location.reload(), 3000); } }>Sign Out</Button> });\n    } else {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-login' className={ this.props.classes.auth } onClick={ () => { speak('Sign in'); } }>Sign In</Button> });\n    }\n  }\n\n  handleCompose(bool) {\n    this.setState({\n      compose: bool\n    });\n  }\n\n  handleSettings(bool) {\n    this.setState({\n      settings: bool\n    });\n  }\n\n  getEmail(profile) {\n    this.address = profile.emailAddress;\n  }\n\n  send(recipient, body, recording) {\n    if (!!recording) {\n      recording.then((result) => {\n        this.emailContent = `MIME-Version: 1.0\\r\\nFrom: ${ this.address }\\r\\nTo: ${ recipient }\\r\\nSubject: Email from ${ this.address }\\r\\nContent-Type: multipart/related\\r\\nReply-To: ${ this.address }\\r\\nboundary=\"myboundary\"\\r\\n--myboundary\\r\\nContent-Type: text/plain\\r\\n\\r\\n${ body }\\nSent with AbleMail.\\r\\n\\r\\n--myboundary\\r\\nContent-Type: audio/webp\\r\\nContent-Transfer-Encoding: base64\\r\\nContent-Disposition: attachment; filename=\"audio.webp\"\\r\\n\\r\\n${ result }`;\n        this.gmailSend();\n      });\n    } else {\n      this.emailContent = `Content-Type: text/plain\\r\\nFrom: ${ this.address }\\r\\nTo: ${ recipient }\\r\\nSubject: Email from ${ this.address }\\r\\nReply-To: ${ this.address }\\r\\n\\r\\n${ body }\\nSent with AbleMail.`;\n      this.gmailSend();\n    }\n  }\n\n  gmailSend() {\n    window.gapi.client.gmail.users.messages.send({\n      userId: 'me',\n      resource: {\n        raw: btoa(this.emailContent).replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n    }).then(() => setTimeout(() => window.location.reload(), 500));\n  }\n\n  handleRecognition() {\n    if (this.isRecording) {\n      this.recognition.stop();\n    } else {\n      setTimeout(() => {\n        this.recognition.start(() => {\n          let message = this.recognition.transcript.toLowerCase();\n          switch (true) {\n            case /compose/.test(message):\n              document.getElementById('btn-compose').click();\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n            case /read emails/.test(message):\n              speak(`You have ${ this.emailCount } emails. ${ this.mailData } That's all of your emails.`);\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n          }\n        });\n      }, 2000);\n    }\n    this.isRecording = !this.isRecording;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={ classes.body }>\n        <CssBaseline />\n        <AppBar className={ classes.appBar }>\n          <Toolbar>\n            <Settings open={ this.state.settings } onClose={ () => this.handleSettings(false) } />\n            <Button variant='outlined' color='secondary' className={ classes.settings } onClick={ () => { this.handleSettings(true); speak('Settings') } }>\n              <SettingsIcon />&emsp;Coach's Settings\n            </Button>\n            <img onClick={ () => speak('AbleMail') } className={ classes.logo } src='logo.png' alt='AbleMail' />\n            { this.state.auth }\n          </Toolbar>\n        </AppBar>\n        <Drawer variant='permanent' classes={ { paper: classes.drawerPaper } } className={ classes.drawer }>\n          <List component='nav'>\n            <div className={ classes.toolbar } />\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => { this.recognition.stop(); this.handleCompose(true); speak('Compose email'); } } id='btn-compose'>\n              <ListItemIcon>\n                <AddCircleOutlineIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <Typography variant='h3' color='inherit' className={ classes.bold }>Compose</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            { this.state.recognition }\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => speak('Settings') }>\n              <ListItemIcon>\n                <SettingsIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <ClientSettings open={ this.state.clientSettings } onClose={ () => this.setState({ clientSettings: false }) } />\n                <Typography variant='h3' color='inherit' className={ classes.bold } onClick={ () => { this.setState({ clientSettings: true }); speak('Settings') } }>Settings</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n          </List>\n        </Drawer>\n        <main className={ classes.content }>\n          <div className={ classes.toolbar }>\n            <Mailbox isLogin={ (status) => this.login(status) } mailData={ (data) => { this.mailData = data; this.emailCount++; } } getEmail={ (profile) => this.getEmail(profile) } />\n            <Compose open={ this.state.compose } onClose={ () => this.handleCompose(false) } send={ (recipient, body, recording) => this.send(recipient, body, recording) } func={ (bool) => this.setState({ compose: bool }) } />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}