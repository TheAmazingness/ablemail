{"version":3,"sources":["Recorder.js","Recognition.js","Compose.js","Voice.js","Mail.js","MailPreview.js","Mailbox.js","Settings.js","App.js","index.js"],"names":["VEMAIL","JSON","parse","window","localStorage","getItem","Recorder","_this","this","Object","classCallCheck","isRecording","result","Promise","resolve","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","audioBlob","Blob","reader","FileReader","readAsDataURL","onloadend","start","console","log","stop","RECOGNITION","Recognition","message","SpeechRecognition","webkitSpeechRecognition","recognition","e","error","alert","callback","continuous","onresult","current","resultIndex","transcript","results","init","m","icon","Compose","props","possibleConstructorReturn","getPrototypeOf","call","state","content","send","document","getElementById","value","base64Recording","_this2","classes","react_default","a","createElement","Dialog_default","className","dialog","open","fullScreen","onClose","onEntered","setTimeout","DialogTitle_default","dialogTitle","TextField_default","autoFocus","fullWidth","variant","rows","placeholder","id","multiline","onChange","setState","Button_default","color","onClick","Send_default","React","Component","withStyles","theme","padding","spacing","unit","zIndex","fontSize","SPEAK","speak","text","Voice","rate","Mail","ok","concat","from","no","maybe","read","getAllText","RecordVoiceOver_default","record","getElementsByClassName","innerHTML","click","address","substring","length","setAttribute","_this3","entered","Grid_default","container","item","sm","subject","IconButton_default","aria-label","func","Close_default","onMouseUp","getSelectedText","grid","Typography_default","FlashOn_default","flashIcon","ThumbUp_default","replyIcon","ThumbDown_default","SentimentDissatisfied_default","innerText","getSelection","toString","margin","textAlign","MailPreview","bool","payload","headers","filter","el","name","split","atob","mime","replace","mailData","Card_default","raised","card","htmlDecode","snippet","handleClick","size","OpenInBrowser_default","trash","DeleteForever_default","src_Mail","input","childNodes","nodeValue","body","parts","mimeType","date","lineHeight","DISCOVERY_DOCS","Mailbox","mail","CircularProgress_default","emailCount","compiled","gapi","load","client","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","get","getMessages","isLogin","gmail","users","getProfile","userId","response","getEmail","onclick","login","logout","_this4","messages","list","labelIds","fullMessage","forEach","i","res","location","reload","sort","b","internalDate","map","key","src_MailPreview","compile","signIn","signOut","Settings","storage","setItem","tts","vemail","Switch_default","checked","btnApply","Check_default","position","App","auth","compose","settings","toolbar","Divider_default","ListItem_default","button","handleRecognition","ListItemIcon_default","ListItemText_default","bold","arguments","undefined","profile","emailAddress","recipient","recording","emailContent","gmailSend","resource","raw","btoa","toLowerCase","test","CssBaseline_default","AppBar_default","appBar","Toolbar_default","src_Settings","handleSettings","Settings_default","logo","src","alt","Drawer_default","paper","drawerPaper","drawer","List_default","component","handleCompose","AddCircleOutline_default","Mailbox_Mailbox","status","src_Compose","alignItems","right","height","overflow","width","display","fontWeight","flexGrow","overflowY","flexShrink","left","mixins","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.4982ce23.chunk.js","sourcesContent":["const VEMAIL = JSON.parse(window.localStorage.getItem('vemail'));\n\nexport default class Recorder {\n  constructor() {\n    if (VEMAIL) {\n      this.isRecording = false;\n      this.result = new Promise((resolve) => {\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n          this.mediaRecorder = new MediaRecorder(stream);\n          this.audioChunks = [];\n          this.mediaRecorder.addEventListener('dataavailable', (event) => {\n            this.audioChunks.push(event.data);\n          });\n          this.mediaRecorder.addEventListener('stop', () => {\n            let audioBlob = new Blob(this.audioChunks);\n            let reader = new FileReader();\n            reader.readAsDataURL(audioBlob);\n            reader.onloadend = () => {\n              resolve(reader.result);\n            };\n          });\n        });\n      });\n    }\n  }\n\n  start() {\n    if (VEMAIL && !this.isRecording) {\n      this.mediaRecorder.start();\n      this.isRecording = true;\n      console.log('Starting recording...');\n    }\n  }\n\n  stop() {\n    if (VEMAIL && this.isRecording) {\n      this.mediaRecorder.stop();\n      this.isRecording = false;\n      console.log('Stopping recording...');\n    }\n  }\n\n  get base64Recording() {\n    return this.result;\n  }\n}","const RECOGNITION = JSON.parse(window.localStorage.getItem('recognition'));\n\nexport default class Recognition {\n  constructor() {\n    this.message = '';\n    this.isRecording = false;\n    if (RECOGNITION) {\n      try {\n        this.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        this.recognition = new this.SpeechRecognition();\n      } catch (e) {\n        console.error(e);\n        alert('Your browser does not support voice recognition.');\n      }\n    }\n  }\n\n  init(callback) {\n    if (RECOGNITION) {\n      this.recognition.continuous = true;\n      this.recognition.onresult = (e) => {\n        let current = e.resultIndex;\n        let transcript = e.results[current][0].transcript;\n        this.message += transcript;\n        !!callback && callback();\n      };\n    }\n  }\n\n  start(callback) {\n    if (RECOGNITION && !this.isRecording) {\n      this.init(() => !!callback && callback());\n      this.recognition.start();\n      this.isRecording = true;\n      console.log('Starting voice recognition...');\n    }\n  }\n\n  stop() {\n    if (RECOGNITION && this.isRecording) {\n      this.recognition.stop();\n      this.isRecording = false;\n      console.log('Stopping voice recognition...');\n      return this.message;\n    }\n  }\n\n  get transcript() {\n    return this.message;\n  }\n\n  set transcript(m) {\n    this.message = m;\n  }\n}","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Recorder from './Recorder';\nimport Recognition from './Recognition';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  send: {\n    fontSize: icon ? '60pt' : '40pt'\n  }\n});\n\nclass Compose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n  }\n\n  send() {\n    this.props.send(\n      document.getElementById('recipient').value,\n      document.getElementById('compose-body').value,\n      this.mediaRecorder.base64Recording\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.mediaRecorder = new Recorder();\n    let recognition = new Recognition();\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() } onEntered={ () => setTimeout(() => { this.mediaRecorder.start(); recognition.start(); }, 2000) }>\n        <DialogTitle className={ classes.dialogTitle }>Compose Email</DialogTitle>\n        <div className={ classes.dialog }>\n          <TextField autoFocus fullWidth variant='outlined' rows='1' placeholder='To:' id='recipient' />\n          <br />\n          <br />\n          <TextField fullWidth multiline variant='outlined' rows='20' id='compose-body' value={ this.state.content } onChange={ () => this.setState({ content: document.getElementById('compose-body').value }) } placeholder='Message' />\n          <br />\n          <br />\n          <Button variant='outlined' color='secondary' id='btn-send' onClick={ () => { this.mediaRecorder.stop(); this.setState({ content: recognition.stop() }); this.send(); } }>\n            <SendIcon className={ classes.send } />&emsp;Send Email\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Compose);","import Voice from '@cheapundies/responsive-voice';\n\nconst SPEAK = JSON.parse(window.localStorage.getItem('tts'));\n\nexport function speak(text) {\n  SPEAK && Voice.speak(text, 'US English Female', { rate: 0.75 });\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FlashOnIcon from '@material-ui/icons/FlashOn'\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '30pt'\n  },\n  flashIcon: {\n    fontSize: '36pt'\n  },\n  grid: {\n    margin: 10,\n    textAlign: 'center'\n  },\n  record: {\n    fontSize: icon ? '40pt' : '60pt'\n  },\n  replyIcon: {\n    fontSize: '24pt'\n  }\n});\n\nclass Mail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ok = `\n      Dear ${ this.props.from },\n      \\r\\n\\n\n      Sounds great!`;\n    this.no = `\n      Dear ${ this.props.from },\n      \\r\\n\\n\n      No, sorry. I don't think so.`;\n    this.maybe = `\n      Dear ${ this.props.from },\n      `;\n    this.state = {\n      read: JSON.parse(window.localStorage.getItem('tts')) ? (\n        <Button variant='contained' color='secondary' onClick={ () => Mail.getAllText() }>\n          <RecordVoiceOverIcon className={ this.props.classes.record } />&nbsp;\n          Read Email\n        </Button>\n      ) : null\n    };\n  }\n\n  entered() {\n    document.getElementsByClassName('mail-body')[0].innerHTML = this.props.data;\n  }\n\n  static getAllText() {\n    speak(document.getElementsByClassName('mail-body')[0].innerText);\n  }\n\n  static getSelectedText() {\n    let text = '';\n    if (window.getSelection) {\n      text = window.getSelection().toString();\n    }\n    speak(text);\n  }\n\n  send(value) {\n    document.getElementById('btn-compose').click();\n    setTimeout(() => {\n      document.getElementById('recipient').value = this.props.address.substring(0, this.props.address.length - 1);\n      document.getElementById('recipient').setAttribute('disabled', 'true');\n      document.getElementById('compose-body').value = value;\n      document.getElementById('compose-body').setAttribute('disabled', 'true');\n      setTimeout(() => {\n        document.getElementById('btn-send').click();\n      }, 2000);\n    }, 1000);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen={ true } onClose={ () => this.props.onClose() } onEntered={ () => this.entered() }>\n        <Grid container spacing={ 8 }>\n          <Grid item sm={ 7 }>\n            <DialogTitle className={ classes.dialogTitle } onClick={ () => speak(this.props.subject) }>{ this.props.subject }</DialogTitle>\n            <br />\n          </Grid>\n          <Grid item sm={ 3 }>\n            <br />\n            <br />\n            { this.state.read }\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Close' color='primary' onClick={ () => this.props.func(false) }>\n              <CloseIcon className={ classes.record } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <br />\n        <div className={ `${ classes.dialog } mail-body` } onClick={ () => Mail.getAllText() } onMouseUp={ () => Mail.getSelectedText() } />\n        <Grid container spacing={ 8 } className={ classes.grid }>\n          <Grid item sm={ 12 }>\n            <br />\n            <br />\n            <Typography variant='h3' onClick={ () => speak('Quick reply') }>\n              <FlashOnIcon className={ classes.flashIcon } />Quick Reply\n            </Typography>\n            <br />\n            <br />\n          </Grid>\n          <Grid item sm={ 4 } />\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Ok' color='primary' onClick={ () => this.send(this.ok) }>\n              <ThumbUpIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='No' color='primary' onClick={ () => this.send(this.no) } >\n              <ThumbDownIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Maybe' color='primary' onClick={ () => this.send(this.maybe) }>\n              <SentimentDissatisfiedIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Maybe' color='primary' onClick={ () => this.send('test') }>\n              <SentimentDissatisfiedIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <br />\n        <br />\n        <br />\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Mail);","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Card from '@material-ui/core/Card';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Mail from './Mail';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport Typography from \"@material-ui/core/Typography\";\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  card: {\n    padding: theme.spacing.unit * 5\n  },\n  date: {\n    lineHeight: 2\n  },\n  open: {\n    fontSize: icon ? '60pt' : '40pt'\n  }\n});\n\nclass MailPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  static htmlDecode(input){\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n\n  static mime(payload) {\n    // Needs to be optimized later\n    return payload.body.data || MailPreview.mime(payload.parts.filter((el) => el.mimeType === 'text/html' || el.mimeType === 'multipart/alternative' || el.mimeType === 'multipart/related')[0]);\n  }\n\n  handleClick(bool) {\n    this.setState({\n      open: bool\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.from = this.props.payload.headers.filter(el => el.name === 'From')[0].value.split('<');\n    this.subject = this.props.payload.headers.filter(el => el.name === 'Subject')[0].value;\n    this.data = atob(MailPreview.mime(this.props.payload).replace(/_/g, '/').replace(/-/g, '+'));\n    this.props.mailData(`From ${ this.from[0] }. ${ this.subject }.`);\n    return (\n      <Card raised className={ classes.card }>\n        <Typography variant='h3' onClick={ () => speak(`From ${ this.from[0] }`) }>From: { this.from[0] }</Typography>\n        <br />\n        <Typography variant='h6' onClick={ () => speak(this.from[1]) }>{ `<${ this.from[1] }` }</Typography>\n        <br />\n        <Typography variant='h2'  onClick={ () => speak(this.subject) }>{ `${ this.subject }` }</Typography>\n        <br />\n        <Typography variant='h5' onClick={ () => speak(MailPreview.htmlDecode(this.props.snippet)) }>{ MailPreview.htmlDecode(this.props.snippet) }...</Typography>\n        <br />\n        <br />\n        <Grid container spacing={ 24 }>\n          <Grid item sm={ 9 }>\n            <Button variant='contained' onClick={ () => { this.handleClick(true); speak('Open email'); } } size='large' color='primary' fullWidth>\n              <OpenInBrowserIcon className={ classes.open } />&emsp;\n              Open Email\n            </Button>\n          </Grid>\n          <Grid item sm={ 3 }>\n            <IconButton aria-label='Delete' color='primary' onClick={ () => this.props.trash() }>\n              <DeleteForeverIcon className={ classes.open } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Mail open={ this.state.open } func={ (bool) => this.handleClick(bool) } onClose={ () => this.handleClick(false) } subject={ this.subject } data={ this.data } from={ this.from[0] } address={ this.from[1] } />\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(style)(MailPreview);","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MailPreview from './MailPreview';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\n\nconst CLIENT_ID = '98686281361-8upucg52mkqe70nv3j9evlc9kim8ki56.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyAnDiNaAU8T2W75ynyVt-Dz8ebMxD30s1I';\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest'];\nconst SCOPES = 'https://www.googleapis.com/auth/gmail.modify';\n\nexport default class Mailbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mail: <CircularProgress color='secondary' />\n    };\n    this.emailCount = 0;\n    this.compiled = '';\n  }\n  componentDidMount() {\n    try {\n      window.gapi.load('client:auth2', () => {\n        this.init();\n      });\n    } catch (e) {\n      console.error(e);\n      alert('Something went wrong. Try refreshing the page?');\n      this.setState({ mail: <Typography variant='h2' onClick={ () => speak('Unable to fetch emails') }>Unable to fetch emails.</Typography> });\n    }\n  }\n\n  init() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(() => {\n      if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n        this.getMessages();\n      }\n      this.props.isLogin(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      window.gapi.client.gmail.users.getProfile({ userId: 'me' }).then((response) => {\n        this.props.getEmail(JSON.parse(response.body));\n      });\n      try { document.getElementById('btn-login').onclick = Mailbox.login; } catch (e) {}\n      try { document.getElementById('btn-logout').onclick = Mailbox.logout; } catch (e) {}\n    });\n  }\n\n  static login() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  static logout() {\n    window.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  static trash(id) {\n    window.gapi.client.gmail.users.messages.trash({\n      userId: 'me',\n      id: id\n    }).then(() => window.location.reload());\n  }\n\n  getMessages() {\n    window.gapi.client.gmail.users.messages.list({\n      userId: 'me',\n      labelIds: ['INBOX']\n    }).then((response) => {\n      let { messages } = response.result;\n      let fullMessage = [];\n      messages.forEach((m, i) => {\n        window.gapi.client.gmail.users.messages.get({\n          userId: 'me',\n          id: m.id\n        }).then((res) => {\n          fullMessage.push(res.result);\n          if (i + 1 === messages.length) {\n            if (fullMessage.length !== messages.length) {\n              window.location.reload();\n            }\n            fullMessage.sort((a, b) => b.internalDate - a.internalDate);\n            this.setState({\n              mail: fullMessage.map((el, i) =>\n                <div key={ `preview-${ i }` }>\n                  <MailPreview snippet={ el.snippet } payload={ el.payload } trash={ () => Mailbox.trash(messages[i].id) } mailData={ (data) => this.compile(data) } />\n                  <br />\n                  <br />\n                </div>\n              )\n            });\n          }\n        });\n      });\n    });\n  }\n\n  compile(data) {\n    this.emailCount++;\n    this.compiled += `Email number ${ this.emailCount }: ${ data } `;\n    this.props.mailData(this.compiled);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.mail }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  btnApply: {\n    position: 'fixed'\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  grid: {\n    textAlign: 'center'\n  }\n});\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!!typeof Storage) {\n      this.storage = window.localStorage;\n      if (!this.storage.getItem('tts')) {\n        this.storage.setItem('tts', false);\n      }\n      if (!this.storage.getItem('recognition')) {\n        this.storage.setItem('recognition', false);\n      }\n      if (!this.storage.getItem('vemail')) {\n        this.storage.setItem('vemail', false);\n      }\n      if (!this.storage.getItem('icon')) {\n        this.storage.setItem('icon', false);\n      }\n    } else {\n      alert('Your browser doesn\\'t support local storage.');\n    }\n    this.state = {\n      tts: this.storage.getItem('tts'),\n      recognition: this.storage.getItem('recognition'),\n      vemail: this.storage.getItem('vemail'),\n      icon: this.storage.getItem('icon')\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() }>\n        <DialogTitle className={ classes.dialogTitle }>Settings</DialogTitle>\n        <div className={ classes.dialog }>\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Text-to-Speech</Typography>\n              <Switch checked={ JSON.parse(this.state.tts) } onChange={ (e, checked) => { this.storage.setItem('tts', checked); this.setState({ tts: this.storage.getItem('tts') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Recognition</Typography>\n              <Switch checked={ JSON.parse(this.state.recognition) } onChange={ (e, checked) => { this.storage.setItem('recognition', checked); this.setState({ recognition: this.storage.getItem('recognition') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Emails</Typography>\n              <Switch checked={ JSON.parse(this.state.vemail) } onChange={ (e, checked) => { this.storage.setItem('vemail', checked); this.setState({ vemail: this.storage.getItem('vemail') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Bigger Icons</Typography>\n              <Switch checked={ JSON.parse(this.state.icon) } onChange={ (e, checked) => { this.storage.setItem('icon', checked); this.setState({ icon: this.storage.getItem('icon') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <Button color='primary' variant='outlined' onClick={ () => window.location.reload() } className={ classes.btnApply }>\n            <CheckIcon />&emsp;Apply\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Settings);","import React from 'react';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from \"@material-ui/core/Button\";\nimport Compose from './Compose';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Mailbox from './Mailbox';\nimport Recognition from \"./Recognition\";\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport Settings from './Settings';\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { speak } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  appBar: {\n    zIndex: 1400,\n    alignItems: 'center'\n  },\n  auth: {\n    position: 'absolute',\n    right: '-40vw'\n  },\n  body: {\n    height: '100vh',\n    margin: 0,\n    overflow: 'hidden',\n    width: '100vw',\n    display: 'flex'\n  },\n  bold: {\n    fontWeight: icon ? '' : 'bold'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 12.5,\n    overflowY: 'scroll'\n  },\n  drawer: {\n    flexShrink: 0,\n    width: 360\n  },\n  drawerPaper: {\n    width: 360\n  },\n  icon: {\n    fontSize: icon ? '60pt' : '40pt'\n  },\n  logo: {\n    height: '5vh'\n  },\n  settings: {\n    position: 'absolute',\n    left: '-40vw'\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recognition = new Recognition();\n    this.isRecording = false;\n    this.emailCount = 0;\n    this.state = {\n      auth: null,\n      compose: false,\n      settings: false,\n      recognition: JSON.parse(window.localStorage.getItem('recognition')) ? (\n        <div>\n          <div className={ this.props.classes.toolbar } />\n          <Divider />\n          <ListItem button={ true } onClick={ () => { speak('Voice Command'); this.handleRecognition(); } }>\n            <ListItemIcon>\n              <RecordVoiceOverIcon className={ this.props.classes.icon } />\n            </ListItemIcon>\n            <ListItemText>\n              <br />\n              <Typography variant='h3' color='inherit' className={ this.props.classes.bold }>Voice Command</Typography>\n              <br />\n            </ListItemText>\n          </ListItem>\n          <Divider />\n        </div>\n      ) : null\n    }\n  }\n\n  login(status = false) {\n    if (status) {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-logout' className={ this.props.classes.auth } onClick={ () => { speak('Sign out'); setTimeout(() => window.location.reload(), 3000); } }>Sign Out</Button> });\n    } else {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-login' className={ this.props.classes.auth } onClick={ () => { speak('Sign in'); } }>Sign In</Button> });\n    }\n  }\n\n  handleCompose(bool) {\n    this.setState({\n      compose: bool\n    });\n  }\n\n  handleSettings(bool) {\n    this.setState({\n      settings: bool\n    });\n  }\n\n  getEmail(profile) {\n    this.address = profile.emailAddress;\n  }\n\n  send(recipient, body, recording) {\n    // if (!!recording) {\n    //   recording.then((result) => {\n    //     this.emailContent = `\n    //       Content-Type: multipart/mixed\\r\\n\n    //       From: ${ this.address }\\r\\n\n    //       To: ${ recipient }\\r\\n\n    //       Subject: Email from ${ this.address }\\r\\n\n    //       Reply-To: ${ this.address }\\r\\n\\r\\n\n    //       --boundary\\r\\n\n    //       Content-Type: text/plain\\r\\n\\r\\n\n    //       ${ body }\\n\n    //       Sent with AbleMail.\\r\\n\\r\\n\n    //       --boundary\\r\\n\n    //       Content-Type: audio/*\\r\\n\\r\\n\n    //       ${ result }`;\n    //     this.gmailSend();\n    //   });\n    // } else {\n      this.emailContent = `Content-Type: text/plain\\r\\nFrom: ${ this.address }\\r\\nTo: ${ recipient }\\r\\nSubject: Email from ${ this.address }\\r\\nReply-To: ${ this.address }\\r\\n\\r\\n${ body }\\nSent with AbleMail.`;\n      this.gmailSend();\n    // }\n  }\n\n  gmailSend() {\n    window.gapi.client.gmail.users.messages.send({\n      userId: 'me',\n      resource: {\n        raw: btoa(this.emailContent).replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n    }).then(() => setTimeout(() => window.location.reload(), 500));\n  }\n\n  handleRecognition() {\n    if (this.isRecording) {\n      this.recognition.stop();\n    } else {\n      setTimeout(() => {\n        this.recognition.start(() => {\n          let message = this.recognition.transcript.toLowerCase();\n          switch (true) {\n            case /compose/.test(message):\n              document.getElementById('btn-compose').click();\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n            case /read emails/.test(message):\n              speak(`You have ${ this.emailCount } emails. ${ this.mailData } That's all of your emails.`);\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n          }\n        });\n      }, 2000);\n    }\n    this.isRecording = !this.isRecording;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={ classes.body }>\n        <CssBaseline />\n        <AppBar className={ classes.appBar }>\n          <Toolbar>\n            <Settings open={ this.state.settings } onClose={ () => this.handleSettings(false) } />\n            <Button variant='outlined' color='secondary' className={ classes.settings } onClick={ () => { this.handleSettings(true); speak('Settings') } }>\n              <SettingsIcon />&emsp;Coach's Settings\n            </Button>\n            <img onClick={ () => speak('AbleMail') } className={ classes.logo } src='https://lh3.googleusercontent.com/QXgAJzNC6BONPxSwpDZN5K1aS8klswHmkVwFCoZbYnEw9KvEoNgOrlteo30X2o3Oy3aOWkfjl0x-oVBy6jEf=w1440-h820-rw' alt='AbleMail' />\n            { this.state.auth }\n          </Toolbar>\n        </AppBar>\n        <Drawer variant='permanent' classes={ { paper: classes.drawerPaper } } className={ classes.drawer }>\n          <List component='nav'>\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => { this.recognition.stop(); this.handleCompose(true); speak('Compose email'); } } id='btn-compose'>\n              <ListItemIcon>\n                <AddCircleOutlineIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <Typography variant='h3' color='inherit' className={ classes.bold }>Compose</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            { this.state.recognition }\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => speak('Settings') }>\n              <ListItemIcon>\n                <SettingsIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <Typography variant='h3' color='inherit' className={ classes.bold }>Settings</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n          </List>\n        </Drawer>\n        <main className={ classes.content }>\n          <div className={ classes.toolbar }>\n            <Mailbox isLogin={ (status) => this.login(status) } mailData={ (data) => { this.mailData = data; this.emailCount++; } } getEmail={ (profile) => this.getEmail(profile) } />\n            <Compose open={ this.state.compose } onClose={ () => this.handleCompose(false) } send={ (recipient, body, recording) => this.send(recipient, body, recording) } />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}