{"version":3,"sources":["Voice.js","ClientSettings.js","Recorder.js","Recognition.js","Compose.js","Mail.js","MailPreview.js","Mailbox.js","Settings.js","App.js","index.js"],"names":["SPEAK","JSON","parse","window","localStorage","getItem","Voice","text","Object","classCallCheck","this","setItem","createClass","key","value","isSpeaking","_this","ResponsiveVoice","cancel","speak","rate","onend","onEnd","ClientSettings","props","possibleConstructorReturn","getPrototypeOf","call","storage","state","tts","recognition","vemail","icon","helpAddress","_this2","classes","react_default","a","createElement","Dialog_default","className","dialog","open","fullScreen","onClose","DialogTitle_default","dialogTitle","Grid_default","container","spacing","grid","item","sm","Typography_default","typography","onClick","activate","Switch_default","checked","onChange","e","setState","Button_default","color","variant","location","reload","btnApply","Check_default","React","Component","withStyles","theme","position","padding","unit","zIndex","fontSize","textAlign","VEMAIL","Recorder","isRecording","result","Promise","resolve","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","audioBlob","Blob","reader","FileReader","readAsDataURL","onloadend","start","console","log","stop","RECOGNITION","Recognition","message","SpeechRecognition","webkitSpeechRecognition","error","alert","callback","continuous","onresult","current","resultIndex","transcript","results","init","m","Compose","content","send","document","getElementById","base64Recording","onEntered","setTimeout","title","IconButton_default","aria-label","func","Close_default","close","TextField_default","type","autoFocus","fullWidth","rows","placeholder","id","multiline","Send_default","sendEmail","overflow","Mail","ok","concat","from","no","maybe","read","getAllText","RecordVoiceOver_default","record","getElementsByClassName","innerHTML","replace","click","address","substring","length","setAttribute","_this3","gapi","client","gmail","users","getProfile","userId","response","body","emailAddress","emailContent","messages","resource","raw","btoa","_this4","entered","subject","sendHelp","Help_default","style","border","width","mailBody","onMouseUp","getSelectedText","FlashOn_default","flashIcon","ThumbUp_default","replyIcon","ThumbDown_default","SentimentDissatisfied_default","Reply_default","innerText","getSelection","toString","margin","paddingBottom","paddingLeft","paddingRight","paddingTop","MailPreview","bool","payload","headers","filter","el","name","split","atob","mime","mailData","Card_default","raised","card","htmlDecode","snippet","handleClick","size","OpenInBrowser_default","trash","DeleteForever_default","src_Mail","input","childNodes","nodeValue","parts","mimeType","date","lineHeight","DISCOVERY_DOCS","Mailbox","mail","CircularProgress_default","emailCount","compiled","Refresh_default","load","clearTimeout","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","isSignedIn","get","getMessages","isLogin","getEmail","onclick","login","logout","list","labelIds","fullMessage","forEach","i","res","sort","b","internalDate","map","src_MailPreview","compile","signIn","signOut","Settings","stringify","canned","allCan","all","arr","_loop","hasOwnProperty","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Icon_default","ExpansionPanelDetails_default","onClimck","deleteCan","Input_default","defaultValue","target","href","TextField_TextField_default","addCan","App","auth","compose","settings","clientSettings","toolbar","Divider_default","ListItem_default","button","handleRecognition","ListItemIcon_default","ListItemText_default","bold","arguments","undefined","profile","recipient","recording","gmailSend","toLowerCase","test","CssBaseline_default","AppBar_default","appBar","Toolbar_default","src_Settings","handleSettings","Settings_default","logo","src","alt","Drawer_default","paper","drawerPaper","drawer","List_default","component","handleCompose","AddCircleOutline_default","src_ClientSettings","Mailbox_Mailbox","status","src_Compose","alignItems","right","height","display","fontWeight","flexGrow","overflowY","flexShrink","left","mixins","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.0945c141.chunk.js","sourcesContent":["import ResponsiveVoice from '@cheapundies/responsive-voice';\n\nconst SPEAK = JSON.parse(window.localStorage.getItem('tts'));\n\n// Need a better solution\nexport class Voice {\n  constructor(text) {\n    this.text = text;\n    if (!window.localStorage.getItem('is_tts')) {\n      window.localStorage.setItem('is_tts', false);\n    }\n  }\n\n  onEnd() {\n    window.localStorage.setItem('is_tts', this.isSpeaking);\n  }\n\n  activate() {\n    if (SPEAK) {\n      this.isSpeaking = JSON.parse(window.localStorage.getItem('is_tts'));\n      this.isSpeaking && ResponsiveVoice.cancel();\n      !this.isSpeaking && ResponsiveVoice.speak(this.text, 'US English Female', { rate: 0.75, onend: () => this.onEnd() });\n      window.localStorage.setItem('is_tts', !this.isSpeaking);\n    }\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport { Voice } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  btnApply: {\n    position: 'fixed'\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  grid: {\n    textAlign: 'center'\n  },\n  typography: {\n    fontSize: JSON.parse(window.localStorage.getItem('icon')) ? '48pt' : '36pt'\n  }\n});\n\nclass ClientSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!!typeof Storage) {\n      this.storage = window.localStorage;\n      if (!this.storage.getItem('tts')) {\n        this.storage.setItem('tts', false);\n      }\n      if (!this.storage.getItem('recognition')) {\n        this.storage.setItem('recognition', false);\n      }\n      if (!this.storage.getItem('vemail')) {\n        this.storage.setItem('vemail', false);\n      }\n      if (!this.storage.getItem('icon')) {\n        this.storage.setItem('icon', false);\n      }\n      if (!this.storage.getItem('helpAddress')) {\n        this.storage.setItem('helpAddress', 'ablemail1540@gmail.com');\n      }\n    } else {\n      alert('Your browser doesn\\'t support local storage.');\n    }\n    this.state = {\n      tts: this.storage.getItem('tts'),\n      recognition: this.storage.getItem('recognition'),\n      vemail: this.storage.getItem('vemail'),\n      icon: this.storage.getItem('icon'),\n      helpAddress: this.storage.getItem('helpAddress')\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() }>\n        <DialogTitle className={ classes.dialogTitle }>Settings</DialogTitle>\n        <div className={ classes.dialog }>\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.tts) ? (\n                  <div>\n                    <Typography className={ classes.typography } onClick={ () => new Voice('Text to speech').activate() }>Text-to-Speech</Typography>\n                    <Switch checked={ JSON.parse(this.state.tts) } onChange={ (e, checked) => { this.storage.setItem('tts', checked); this.setState({ tts: this.storage.getItem('tts') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.recognition) ? (\n                  <div>\n                    <Typography className={ classes.typography } onClick={ () => new Voice('Voice recognition').activate() }>Voice Recognition</Typography>\n                    <Switch checked={ JSON.parse(this.state.recognition) } onChange={ (e, checked) => { this.storage.setItem('recognition', checked); this.setState({ recognition: this.storage.getItem('recognition') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.vemail) ? (\n                  <div>\n                    <Typography className={ classes.typography } onClick={ () => new Voice('Voice emails').activate() }>Voice Emails</Typography>\n                    <Switch checked={ JSON.parse(this.state.vemail) } onChange={ (e, checked) => { this.storage.setItem('vemail', checked); this.setState({ vemail: this.storage.getItem('vemail') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n            <Grid item sm={ 6 }>\n              {\n                JSON.parse(this.state.icon) ? (\n                  <div>\n                    <Typography className={ classes.typography } onClick={ () => new Voice('Bigger icons').activate() }>Bigger Icons</Typography>\n                    <Switch checked={ JSON.parse(this.state.icon) } onChange={ (e, checked) => { this.storage.setItem('icon', checked); this.setState({ icon: this.storage.getItem('icon') }); } } />\n                  </div>\n                ) : ''\n              }\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <Button color='primary' variant='outlined' onClick={ () => window.location.reload() } className={ classes.btnApply }>\n            <CheckIcon />&emsp;Apply\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(ClientSettings);","const VEMAIL = JSON.parse(window.localStorage.getItem('vemail'));\n\nexport default class Recorder {\n  constructor() {\n    if (VEMAIL) {\n      this.isRecording = false;\n      this.result = new Promise((resolve) => {\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n          this.mediaRecorder = new MediaRecorder(stream);\n          this.audioChunks = [];\n          this.mediaRecorder.addEventListener('dataavailable', (event) => {\n            this.audioChunks.push(event.data);\n          });\n          this.mediaRecorder.addEventListener('stop', () => {\n            let audioBlob = new Blob(this.audioChunks);\n            let reader = new FileReader();\n            reader.readAsDataURL(audioBlob);\n            reader.onloadend = () => {\n              resolve(reader.result);\n            };\n          });\n        });\n      });\n    }\n  }\n\n  start() {\n    if (VEMAIL && !this.isRecording) {\n      this.mediaRecorder.start();\n      this.isRecording = true;\n      console.log('Starting recording...');\n    }\n  }\n\n  stop() {\n    if (VEMAIL && this.isRecording) {\n      this.mediaRecorder.stop();\n      this.isRecording = false;\n      console.log('Stopping recording...');\n    }\n  }\n\n  get base64Recording() {\n    return this.result;\n  }\n}","const RECOGNITION = JSON.parse(window.localStorage.getItem('recognition'));\n\nexport default class Recognition {\n  constructor() {\n    this.message = '';\n    this.isRecording = false;\n    if (RECOGNITION) {\n      try {\n        this.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        this.recognition = new this.SpeechRecognition();\n      } catch (e) {\n        console.error(e);\n        alert('Your browser does not support voice recognition.');\n      }\n    }\n  }\n\n  init(callback) {\n    if (RECOGNITION) {\n      this.recognition.continuous = true;\n      this.recognition.onresult = (e) => {\n        let current = e.resultIndex;\n        let transcript = e.results[current][0].transcript;\n        this.message += transcript;\n        !!callback && callback();\n      };\n    }\n  }\n\n  start(callback) {\n    if (RECOGNITION && !this.isRecording) {\n      this.init(() => !!callback && callback());\n      this.recognition.start();\n      this.isRecording = true;\n      console.log('Starting voice recognition...');\n    }\n  }\n\n  stop() {\n    if (RECOGNITION && this.isRecording) {\n      this.recognition.stop();\n      this.isRecording = false;\n      console.log('Stopping voice recognition...');\n      return this.message;\n    }\n  }\n\n  get transcript() {\n    return this.message;\n  }\n\n  set transcript(m) {\n    this.message = m;\n  }\n}","import React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Recorder from './Recorder';\nimport Recognition from './Recognition';\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Voice } from './Voice';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  close: {\n    fontSize: JSON.parse(window.localStorage.getItem('icon')) ? '60pt' : '40pt',\n    zIndex: 99999\n  },\n  dialog: {\n    overflow: 'hidden',\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  send: {\n    fontSize: icon ? '60pt' : '40pt'\n  },\n  sendEmail: {\n    fontSize: icon ? '36pt' : '28pt'\n  },\n  title: {\n    fontSize: icon ? '48pt' : '36pt'\n  },\n  type: {\n    fontSize: icon ? '28pt' : '20pt'\n  }\n});\n\nclass Compose extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n  }\n\n  send() {\n    this.props.send(\n      document.getElementById('recipient').value,\n      document.getElementById('compose-body').value,\n      this.mediaRecorder.base64Recording\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.mediaRecorder = new Recorder();\n    let recognition = new Recognition();\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() } onEntered={ () => setTimeout(() => { this.mediaRecorder.start(); recognition.start(); }, 2000) }>\n        <Grid container spacing={ 8 }>\n          <Grid item sm={ 10 }>\n            <DialogTitle onClick={ () => new Voice('Compose Email').activate() }>\n              <Typography className={ classes.title }>Compose Email</Typography>\n            </DialogTitle>\n            <br />\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Close' color='primary' onClick={ () => this.props.func(false) }>\n              <CloseIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <div className={ classes.dialog }>\n          <TextField className={ classes.type } autoFocus fullWidth variant='outlined' rows='1' placeholder='To:' id='recipient' />\n          <br />\n          <br />\n          <TextField className={ classes.type } fullWidth multiline variant='outlined' rows='12' id='compose-body' value={ this.state.content } onChange={ () => this.setState({ content: document.getElementById('compose-body').value }) } placeholder='Message' />\n          <br />\n          <br />\n          <Button variant='outlined' color='secondary' id='btn-send' onClick={ () => { this.mediaRecorder.stop(); this.setState({ content: recognition.stop() }); this.send(); } }>\n            <SendIcon className={ classes.send } />&emsp;\n            <Typography className={ classes.sendEmail } color='inherit'>Send Email</Typography>\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Compose);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FlashOnIcon from '@material-ui/icons/FlashOn'\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport IconButton from '@material-ui/core/IconButton';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport Typography from '@material-ui/core/Typography';\nimport { Voice } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  close: {\n    fontSize: icon ? '60pt' : '40pt',\n    zIndex: 99999\n  },\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: icon ? '48pt' : '36pt'\n  },\n  flashIcon: {\n    fontSize: '36pt'\n  },\n  grid: {\n    margin: 10,\n    textAlign: 'center'\n  },\n  mailBody: {\n    fontSize: icon ? '36pt' : '24pt',\n    paddingBottom: theme.spacing.unit * 10,\n    paddingLeft: theme.spacing.unit * 5,\n    paddingRight: theme.spacing.unit * 5,\n    paddingTop: theme.spacing.unit * 5,\n  },\n  record: {\n    fontSize: icon ? '60pt' : '40pt',\n    zIndex: 99999\n  },\n  replyIcon: {\n    fontSize: '24pt'\n  },\n  spacing: {\n    padding: '5vh'\n  }\n});\n\nclass Mail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ok = `Dear ${ this.props.from },\\r\\n\\nSounds great! See you then!`;\n    this.no = `Dear ${ this.props.from },\\r\\n\\nNo. That does not work for me.`;\n    this.maybe = `Dear ${ this.props.from },\\r\\n\\nI'll get back to you.`;\n    this.state = {\n      read: JSON.parse(window.localStorage.getItem('tts')) ? (\n        <Button variant='contained' color='secondary' onClick={ () => Mail.getAllText() }>\n          <RecordVoiceOverIcon className={ this.props.classes.record } />&nbsp;\n          Read Email\n        </Button>\n      ) : null\n    };\n  }\n\n  entered() {\n    document.getElementsByClassName('mail-body')[0].innerHTML = this.props.data.replace(/Â/g, ' ');\n  }\n\n  static getAllText() {\n    new Voice(document.getElementsByClassName('mail-body')[0].innerText).activate();\n  }\n\n  static getSelectedText() {\n    let text = '';\n    if (window.getSelection) {\n      text = window.getSelection().toString();\n    }\n    new Voice(text).activate();\n  }\n\n  send(value) {\n    document.getElementById('btn-compose').click();\n    setTimeout(() => {\n      document.getElementById('recipient').value = this.props.address.substring(0, this.props.address.length - 1);\n      document.getElementById('recipient').setAttribute('disabled', 'true');\n      document.getElementById('compose-body').value = value;\n      document.getElementById('compose-body').setAttribute('disabled', 'true');\n      setTimeout(() => {\n        document.getElementById('btn-send').click();\n      }, 2000);\n    }, 1000);\n  }\n\n  sendHelp() {\n    window.gapi.client.gmail.users.getProfile({ userId: 'me' }).then((response) => {\n      this.address = JSON.parse(response.body).emailAddress;\n      this.emailContent = `Content-Type: text/html\\r\\nFrom: ${ this.address }\\r\\nTo: ${ window.localStorage.getItem('helpAddress') }\\r\\nSubject: Help!\\r\\nReply-To: ${ this.address }\\r\\n\\r\\nPlease help:\\n\\n${ this.props.data.replace(/Â/g, ' ') }`;\n      window.gapi.client.gmail.users.messages.send({\n        userId: 'me',\n        resource: {\n          raw: btoa(this.emailContent).replace(/\\+/g, '-').replace(/\\//g, '_')\n        }\n      }).then(() => setTimeout(() => window.location.reload(), 500));\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen={ true } onClose={ () => this.props.onClose() } onEntered={ () => this.entered() }>\n        <Grid container spacing={ 8 }>\n          <Grid item sm={ 7 }>\n            <DialogTitle onClick={ () => new Voice(this.props.subject).activate() }>\n              <Typography className={ classes.dialogTitle }>\n                { this.props.subject }\n              </Typography>\n            </DialogTitle>\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <br />\n            { this.state.read }\n          </Grid>\n          <Grid item sm={ 1 }>\n            <br />\n            <IconButton aria-label='Help' color='secondary' onClick={ () => this.sendHelp() }>\n              <HelpIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 2 }>\n            <br />\n            <IconButton aria-label='Close' color='primary' onClick={ () => this.props.func(false) }>\n              <CloseIcon className={ classes.close } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <div className={ classes.spacing } />\n        <div className={ classes.spacing } />\n        <hr style={ { border: '1px solid #eee', width: '95%' } } />\n        <div className={ classes.spacing } />\n        <div className={ `${ classes.mailBody } mail-body` } onClick={ () => Mail.getAllText() } onMouseUp={ () => Mail.getSelectedText() } />\n        <div className={ classes.spacing } />\n        <hr style={ { border: '1px solid #eee', width: '95%' } } />\n        <Grid container spacing={ 8 } className={ classes.grid }>\n          <Grid item sm={ 12 }>\n            <Typography variant='h3' onClick={ () => new Voice('Reply').activate() }>\n              <FlashOnIcon className={ classes.flashIcon } />Reply\n            </Typography>\n            <br />\n            <br />\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Grid item sm={ 4 } />\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Ok' color='primary' onClick={ () => { this.send(this.ok); new Voice('Yes').activate(); } }>\n              <ThumbUpIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='No' color='primary' onClick={ () => { this.send(this.no); new Voice('No').activate(); } } >\n              <ThumbDownIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Maybe' color='primary' onClick={ () => { this.send(this.maybe); new Voice('Maybe').activate(); } }>\n              <SentimentDissatisfiedIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n          <Grid item sm={ 1 }>\n            <IconButton aria-label='Reply' color='primary' onClick={ () => { new Voice('Reply').activate(); document.getElementById('btn-compose').click(); setTimeout(() => document.getElementById('recipient').value = this.props.address.substring(0, this.props.address.length - 1), 1000); } }>\n              <ReplyIcon className={ classes.replyIcon } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Mail);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Mail from './Mail';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport Typography from '@material-ui/core/Typography';\nimport { Voice } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  card: {\n    padding: theme.spacing.unit * 5\n  },\n  date: {\n    lineHeight: 2\n  },\n  open: {\n    fontSize: icon ? '60pt' : '40pt'\n  }\n});\n\nclass MailPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n\n  static htmlDecode(input){\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n\n  static mime(payload) {\n    // Needs to be optimized later\n    return payload.body.data || MailPreview.mime(payload.parts.filter((el) => el.mimeType === 'text/html' || el.mimeType === 'multipart/alternative' || el.mimeType === 'multipart/related')[0]);\n  }\n\n  handleClick(bool) {\n    this.setState({\n      open: bool\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    this.from = this.props.payload.headers.filter(el => el.name === 'From')[0].value.split('<');\n    this.subject = this.props.payload.headers.filter(el => el.name === 'Subject')[0].value;\n    this.data = atob(MailPreview.mime(this.props.payload).replace(/_/g, '/').replace(/-/g, '+'));\n    this.props.mailData(`From ${ this.from[0] }. ${ this.subject }.`);\n    return (\n      <Card raised className={ classes.card }>\n        <Typography variant='h3' onClick={ () => new Voice(`From ${ this.from[0] }`).activate() }>From: { this.from[0] }</Typography>\n        <br />\n        <Typography variant='h6' onClick={ () => new Voice(this.from[1]).activate() }>{ `<${ this.from[1] }` }</Typography>\n        <br />\n        <Typography variant='h2'  onClick={ () => new Voice(this.subject).activate() }>{ `${ this.subject }` }</Typography>\n        <br />\n        <Typography variant='h5' onClick={ () => new Voice(MailPreview.htmlDecode(this.props.snippet)).activate() }>{ MailPreview.htmlDecode(this.props.snippet) }...</Typography>\n        <br />\n        <br />\n        <Grid container spacing={ 24 }>\n          <Grid item sm={ 9 }>\n            <Button variant='contained' onClick={ () => { this.handleClick(true); new Voice('Open email').activate(); } } size='large' color='primary' fullWidth>\n              <OpenInBrowserIcon className={ classes.open } />&emsp;\n              Open Email\n            </Button>\n          </Grid>\n          <Grid item sm={ 3 }>\n            <IconButton aria-label='Delete' color='primary' onClick={ () => this.props.trash() }>\n              <DeleteForeverIcon className={ classes.open } />\n            </IconButton>\n          </Grid>\n        </Grid>\n        <Mail open={ this.state.open } func={ (bool) => this.handleClick(bool) } onClose={ () => this.handleClick(false) } subject={ this.subject } data={ this.data } from={ this.from[0] } address={ this.from[1] } />\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(style)(MailPreview);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MailPreview from './MailPreview';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Typography from '@material-ui/core/Typography';\nimport { Voice } from './Voice';\n\nconst CLIENT_ID = '98686281361-8upucg52mkqe70nv3j9evlc9kim8ki56.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyAnDiNaAU8T2W75ynyVt-Dz8ebMxD30s1I';\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest'];\nconst SCOPES = 'https://www.googleapis.com/auth/gmail.modify';\n\nexport default class Mailbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mail: <CircularProgress color='secondary' />\n    };\n    this.emailCount = 0;\n    this.compiled = '';\n    this.reload = setTimeout(() => this.setState({\n      mail: (\n        <div>\n          <CircularProgress color='secondary' />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Button color='secondary' variant='contained' onClick={ () => window.location.reload() }>\n            <RefreshIcon style={ { fontSize: JSON.parse(window.localStorage.getItem('icon')) ? '60pt': '40pt' } } />&emsp;\n            Reload\n          </Button>\n        </div>\n      )\n    }), 5000);\n  }\n  componentDidMount() {\n    try {\n      document.addEventListener('DOMContentLoaded', () => {\n        window.gapi.load('client:auth2', () => {\n          this.init();\n        });\n      }, false);\n    } catch (e) {\n      console.error(e);\n      alert('Something went wrong. Try refreshing the page?');\n      clearTimeout(this.reload);\n      this.setState({ mail: <Typography variant='h2' onClick={ () => new Voice('Unable to fetch emails').activate() }>Unable to fetch emails.</Typography> });\n    }\n  }\n\n  init() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(() => {\n      if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n        this.getMessages();\n      }\n      this.props.isLogin(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      window.gapi.client.gmail.users.getProfile({ userId: 'me' }).then((response) => {\n        this.props.getEmail(JSON.parse(response.body));\n      });\n      try { document.getElementById('btn-login').onclick = Mailbox.login; } catch (e) {}\n      try { document.getElementById('btn-logout').onclick = Mailbox.logout; } catch (e) {}\n    });\n  }\n\n  static login() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  static logout() {\n    window.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  static trash(id) {\n    window.gapi.client.gmail.users.messages.trash({\n      userId: 'me',\n      id: id\n    }).then(() => window.location.reload());\n  }\n\n  getMessages() {\n    window.gapi.client.gmail.users.messages.list({\n      userId: 'me',\n      labelIds: ['INBOX']\n    }).then((response) => {\n      let { messages } = response.result;\n      let fullMessage = [];\n      clearTimeout(this.reload);\n      messages.forEach((m, i) => {\n        window.gapi.client.gmail.users.messages.get({\n          userId: 'me',\n          id: m.id\n        }).then((res) => {\n          fullMessage.push(res.result);\n          if (i + 1 === messages.length) {\n            if (fullMessage.length !== messages.length) {\n              window.location.reload();\n            }\n            fullMessage.sort((a, b) => b.internalDate - a.internalDate);\n            this.setState({\n              mail: fullMessage.map((el, i) =>\n                <div key={ `preview-${ i }` }>\n                  <MailPreview snippet={ el.snippet } payload={ el.payload } trash={ () => Mailbox.trash(messages[i].id) } mailData={ (data) => this.compile(data) } />\n                  <br />\n                  <br />\n                </div>\n              )\n            });\n          }\n        });\n      });\n    });\n  }\n\n  compile(data) {\n    this.emailCount++;\n    this.compiled += `Email number ${ this.emailCount }: ${ data } `;\n    this.props.mailData(this.compiled);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.mail }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  dialog: {\n    padding: theme.spacing.unit * 5,\n    zIndex: 2000\n  },\n  dialogTitle: {\n    fontSize: '1.5em'\n  },\n  grid: {\n    textAlign: 'center'\n  }\n});\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!!typeof Storage) {\n      this.storage = window.localStorage;\n      if (!this.storage.getItem('tts')) {\n        this.storage.setItem('tts', false);\n      }\n      if (!this.storage.getItem('recognition')) {\n        this.storage.setItem('recognition', false);\n      }\n      if (!this.storage.getItem('vemail')) {\n        this.storage.setItem('vemail', false);\n      }\n      if (!this.storage.getItem('icon')) {\n        this.storage.setItem('icon', false);\n      }\n      if (!this.storage.getItem('helpAddress')) {\n        this.storage.setItem('helpAddress', 'ablemail1540@gmail.com');\n      }\n      if (!this.storage.getItem('canned')) {\n        this.storage.setItem('canned', JSON.stringify({}));\n      }\n    } else {\n      alert('Your browser doesn\\'t support local storage.');\n    }\n    this.state = {\n      tts: this.storage.getItem('tts'),\n      recognition: this.storage.getItem('recognition'),\n      vemail: this.storage.getItem('vemail'),\n      icon: this.storage.getItem('icon'),\n      helpAddress: this.storage.getItem('helpAddress'),\n      canned: JSON.parse(this.storage.getItem('canned')),\n      allCan: null\n    };\n  }\n\n  componentDidMount() {\n    let all = this.state.canned;\n    let arr = [];\n    for (let icon in all) {\n      if (all.hasOwnProperty(icon)) {\n        arr.push(\n          <Grid item sm={ 12 } key={ icon }>\n            <ExpansionPanel>\n              <ExpansionPanelSummary expandIcon={ <ExpandMoreIcon /> }>\n                <Icon>{ icon }</Icon>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <div>\n                  <Typography variant='h6'>\n                    { all[icon] }\n                  </Typography>\n                  <br />\n                  <IconButton color='primary' onClimck={ () => this.deleteCan(icon) }>\n                    <Icon>delete_forever</Icon>\n                  </IconButton>\n                </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </Grid>\n        );\n      }\n    }\n    this.setState({ allCan: arr });\n  }\n\n  addCan() {\n    this.state.canned[document.getElementById('cannedIcon').value] = document.getElementById('canned').value;\n    this.storage.setItem('canned', JSON.stringify(this.state.canned));\n    document.getElementById('cannedIcon').value = '';\n    document.getElementById('canned').value = '';\n    this.setState({ canned: JSON.parse(this.storage.getItem('canned')) });\n  }\n\n  deleteCan(icon) {\n    delete this.state.canned[icon];\n    this.storage.setItem('canned', JSON.stringify(this.state.canned));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog className={ classes.dialog } open={ this.props.open } fullScreen onClose={ () => this.props.onClose() }>\n        <DialogTitle className={ classes.dialogTitle }>Settings</DialogTitle>\n        <div className={ classes.dialog }>\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Text-to-Speech</Typography>\n              <Switch checked={ JSON.parse(this.state.tts) } onChange={ (e, checked) => { this.storage.setItem('tts', checked); this.setState({ tts: this.storage.getItem('tts') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Recognition</Typography>\n              <Switch checked={ JSON.parse(this.state.recognition) } onChange={ (e, checked) => { this.storage.setItem('recognition', checked); this.setState({ recognition: this.storage.getItem('recognition') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Voice Emails</Typography>\n              <Switch checked={ JSON.parse(this.state.vemail) } onChange={ (e, checked) => { this.storage.setItem('vemail', checked); this.setState({ vemail: this.storage.getItem('vemail') }); } } />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Bigger Icons</Typography>\n              <Switch checked={ JSON.parse(this.state.icon) } onChange={ (e, checked) => { this.storage.setItem('icon', checked); this.setState({ icon: this.storage.getItem('icon') }); } } />\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <Grid container spacing={ 24 } className={ classes.grid }>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Help Email</Typography>\n              <Input defaultValue={ this.state.helpAddress } id='helpAddress' onChange={ () => this.storage.setItem('helpAddress', document.getElementById('helpAddress').value) } type='email' />\n            </Grid>\n            <Grid item sm={ 6 }>\n              <Typography variant='h4'>Add Canned Response</Typography>\n              <Typography>(Click <a target='_blank' href='https://material.io/tools/icons/?style=baseline'>here</a> to see the available icons)</Typography>\n              <Input id='cannedIcon' placeholder='Icon name' />\n              <br />\n              <br />\n              <TextField id='canned' variant='outlined' multiline rows='5' />\n              <br />\n              <br />\n              <Button color='secondary' onClick={ () => this.addCan() }>Add</Button>\n              <br />\n              <br />\n              <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={ <ExpandMoreIcon /> }>\n                  <Typography variant='h6'>See all canned responses</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <Grid container>\n                    { this.state.allCan }\n                  </Grid>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </Grid>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <Button color='primary' variant='outlined' onClick={ () => window.location.reload() }>\n            <CheckIcon />&emsp;Apply\n          </Button>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(style)(Settings);","import React from 'react';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ClientSettings from './ClientSettings';\nimport Compose from './Compose';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Mailbox from './Mailbox';\nimport Recognition from './Recognition';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport Settings from './Settings';\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Voice } from './Voice';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst icon = JSON.parse(window.localStorage.getItem('icon'));\nconst style = theme => ({\n  appBar: {\n    zIndex: 1400,\n    alignItems: 'center'\n  },\n  auth: {\n    position: 'absolute',\n    right: '-40vw'\n  },\n  body: {\n    height: '100vh',\n    margin: 0,\n    overflow: 'hidden',\n    width: '100vw',\n    display: 'flex'\n  },\n  bold: {\n    fontWeight: icon ? '' : 'bold'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 12.5,\n    overflowY: 'scroll'\n  },\n  drawer: {\n    flexShrink: 0,\n    width: 400\n  },\n  drawerPaper: {\n    width: 400\n  },\n  icon: {\n    fontSize: icon ? '60pt' : '40pt'\n  },\n  logo: {\n    height: '5vh'\n  },\n  settings: {\n    position: 'absolute',\n    left: '-40vw'\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.recognition = new Recognition();\n    this.isRecording = false;\n    this.emailCount = 0;\n    this.state = {\n      auth: null,\n      compose: false,\n      settings: false,\n      clientSettings: false,\n      recognition: JSON.parse(window.localStorage.getItem('recognition')) ? (\n        <div>\n          <div className={ this.props.classes.toolbar } />\n          <Divider />\n          <ListItem button={ true } onClick={ () => { new Voice('Voice Command').activate(); this.handleRecognition(); } }>\n            <ListItemIcon>\n              <RecordVoiceOverIcon className={ this.props.classes.icon } />\n            </ListItemIcon>\n            <ListItemText>\n              <br />\n              <Typography variant='h3' color='inherit' className={ this.props.classes.bold }>Voice Command</Typography>\n              <br />\n            </ListItemText>\n          </ListItem>\n          <Divider />\n        </div>\n      ) : null\n    }\n  }\n\n  login(status = false) {\n    if (status) {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-logout' className={ this.props.classes.auth } onClick={ () => { new Voice('Sign out').activate(); setTimeout(() => window.location.reload(), 3000); } }>Sign Out</Button> });\n    } else {\n      this.setState({ auth: <Button variant='contained' color='secondary' id='btn-login' className={ this.props.classes.auth } onClick={ () => { new Voice('Sign in').activate(); } }>Sign In</Button> });\n    }\n  }\n\n  handleCompose(bool) {\n    this.setState({\n      compose: bool\n    });\n  }\n\n  handleSettings(bool) {\n    this.setState({\n      settings: bool\n    });\n  }\n\n  getEmail(profile) {\n    this.address = profile.emailAddress;\n  }\n\n  send(recipient, body, recording) {\n    // if (!!recording) {\n    //   recording.then((result) => {\n    //     this.emailContent = `MIME-Version: 1.0\\r\\nFrom: ${ this.address }\\r\\nTo: ${ recipient }\\r\\nSubject: Email from ${ this.address }\\r\\nContent-Type: multipart/related\\r\\nReply-To: ${ this.address }\\r\\nboundary=\"myboundary\"\\r\\n--myboundary\\r\\nContent-Type: text/plain\\r\\n\\r\\n${ body }\\nSent with AbleMail.\\r\\n\\r\\n--myboundary\\r\\nContent-Type: audio/webp\\r\\nContent-Transfer-Encoding: base64\\r\\nContent-Disposition: attachment; filename=\"audio.webp\"\\r\\n\\r\\n${ result }`;\n    //     this.gmailSend();\n    //   });\n    // } else {\n      this.emailContent = `Content-Type: text/plain\\r\\nFrom: ${ this.address }\\r\\nTo: ${ recipient }\\r\\nSubject: Email from ${ this.address }\\r\\nReply-To: ${ this.address }\\r\\n\\r\\n${ body }\\n\\nSent with AbleMail.`;\n      this.gmailSend();\n    // }\n  }\n\n  gmailSend() {\n    window.gapi.client.gmail.users.messages.send({\n      userId: 'me',\n      resource: {\n        raw: btoa(this.emailContent).replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n    }).then(() => setTimeout(() => window.location.reload(), 500));\n  }\n\n  handleRecognition() {\n    if (this.isRecording) {\n      this.recognition.stop();\n    } else {\n      setTimeout(() => {\n        this.recognition.start(() => {\n          let message = this.recognition.transcript.toLowerCase();\n          switch (true) {\n            case /compose/.test(message):\n              document.getElementById('btn-compose').click();\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n            case /read emails/.test(message):\n              new Voice(`You have ${ this.emailCount } emails. ${ this.mailData } That's all of your emails.`).activate();\n              this.recognition.transcript = '';\n              this.recognition.stop();\n              break;\n          }\n        });\n      }, 2000);\n    }\n    this.isRecording = !this.isRecording;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={ classes.body }>\n        <CssBaseline />\n        <AppBar className={ classes.appBar }>\n          <Toolbar>\n            <Settings open={ this.state.settings } onClose={ () => this.handleSettings(false) } />\n            <Button variant='outlined' color='secondary' className={ classes.settings } onClick={ () => { this.handleSettings(true); new Voice('Settings').activate() } }>\n              <SettingsIcon />&emsp;Coach's Settings\n            </Button>\n            <img onClick={ () => new Voice('AbleMail').activate() } className={ classes.logo } src='logo.png' alt='AbleMail' />\n            { this.state.auth }\n          </Toolbar>\n        </AppBar>\n        <Drawer variant='permanent' classes={ { paper: classes.drawerPaper } } className={ classes.drawer }>\n          <List component='nav'>\n            <div className={ classes.toolbar } />\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => { this.recognition.stop(); this.handleCompose(true); new Voice('Compose email').activate(); } } id='btn-compose'>\n              <ListItemIcon>\n                <AddCircleOutlineIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <Typography variant='h3' color='inherit' className={ classes.bold }>Compose</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n            { this.state.recognition }\n            <div className={ classes.toolbar } />\n            <Divider />\n            <ListItem button={ true } onClick={ () => { this.setState({ clientSettings: true }); new Voice('Settings').activate(); } }>\n              <ListItemIcon>\n                <SettingsIcon className={ classes.icon } />\n              </ListItemIcon>\n              <ListItemText>\n                <br />\n                <ClientSettings open={ this.state.clientSettings } onClose={ () => this.setState({ clientSettings: false }) } />\n                <Typography variant='h3' color='inherit' className={ classes.bold }>Settings</Typography>\n                <br />\n              </ListItemText>\n            </ListItem>\n            <Divider />\n          </List>\n        </Drawer>\n        <main className={ classes.content }>\n          <div className={ classes.toolbar }>\n            <Mailbox isLogin={ (status) => this.login(status) } mailData={ (data) => { this.mailData = data; this.emailCount++; } } getEmail={ (profile) => this.getEmail(profile) } />\n            <Compose open={ this.state.compose } onClose={ () => this.handleCompose(false) } send={ (recipient, body, recording) => this.send(recipient, body, recording) } func={ (bool) => this.setState({ compose: bool }) } />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}